@page
@model SafariSoul.Pages.DependentCRUD.DetailsModel

@{
    ViewData["Title"] = "Details";
    Layout = "_Layout";
}

<h1>Details</h1>

<div>
    <h4>Dependent</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Dependent.Gender)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Dependent.Gender)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Dependent.PhoneNum)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Dependent.PhoneNum)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Dependent.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Dependent.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Dependent.Address)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Dependent.Address)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Dependent.Employee)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Dependent.Employee.EmployeeId)
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-page="./Index">Back to List</a>
</div>
