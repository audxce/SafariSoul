@page
@model SafariSoul.Pages.DataForms.ZooTransactionCRUD.CreateModel

@{
    ViewData["Title"] = "Create";
    @if (@HttpContext.Session.GetString("_Type") == "Admin")
        Layout = "_NewLayout";
    @if (@HttpContext.Session.GetString("_Type") == "Other Employee")
        Layout = "_LayoutEmployee";
    @if (@HttpContext.Session.GetString("_Type") == "Animal Handler")
        Layout = "_LayoutAnimalHandler";
    @if (@HttpContext.Session.GetString("_Type") == "Accountant")
        Layout = "_LayoutAccountant";
    @if (@HttpContext.Session.GetString("_Type") == "Human Resources")
        Layout = "_LayoutHumanResources";
    @if (@HttpContext.Session.GetString("_Type") == "Maintenance")
        Layout = "_LayoutMaintenance";
    @if (@HttpContext.Session.GetString("_Type") == "Sales")
        Layout = "_LayoutSales";
}

<h4>Create Zoo Transaction</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ZooTransaction.DateAndTime" class="control-label"></label>
                <input asp-for="ZooTransaction.DateAndTime" class="form-control" />
                <span asp-validation-for="ZooTransaction.DateAndTime" class="text-danger"></span>
            </div>
            <div style="height: 20px;"></div>
            <div class="form-group">
                <label asp-for="ZooTransaction.CustomerId" class="control-label"></label>
                <select asp-for="ZooTransaction.CustomerId" class ="form-control" asp-items="ViewBag.CustomerId"></select>
            </div>
            <div style="height: 20px;"></div>
            <div class="form-group">
                <label asp-for="ZooTransaction.SellerId" class="control-label"></label>
                <select asp-for="ZooTransaction.SellerId" class ="form-control" asp-items="ViewBag.SellerId"></select>
            </div>
            <div style="height: 20px;"></div>
            <div class="form-group">
                <label asp-for="ZooTransaction.LocationId" class="control-label"></label>
                <select asp-for="ZooTransaction.LocationId" class ="form-control" asp-items="ViewBag.LocationId"></select>
            </div>
            <div style="height: 20px;"></div>
            <!-- Add the new form-group elements for ItemId and ItemQuantity -->
            <div class="row">
                <!-- Add the new form-group elements for ItemId -->
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="TransactionItems[0].ItemId" class="control-label">Item</label>
                        <select asp-for="TransactionItems[0].ItemId" class="form-control item-id" asp-items="ViewBag.ItemId">
                            <option value="">-- Select Item --</option>
                        </select>
                    </div>
                </div>
                <!-- Add the new form-group elements for ItemQuantity and MeasurementUnit -->
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="TransactionItems[0].ItemQuantity" class="control-label">Item Quantity</label>
                        <input asp-for="TransactionItems[0].ItemQuantity" class="form-control item-quantity" />
                    </div>
                </div>
            </div>
            <!-- Add a container div to store the dynamically added input pairs -->
            <div id="additional-items-container"></div>

            <div style="height: 20px;"></div>
            <!-- Add a button to generate a new pair of input fields -->
            <div class="form-group">
                <button type="button" class="btn btn-primary" id="addItem">Add Item</button>
            </div>
            <div style="height: 20px;"></div>
            <div class="form-group">
                <label asp-for="ZooTransaction.GeneralTicketQuantity" class="control-label"></label>
                <input asp-for="ZooTransaction.GeneralTicketQuantity" class="form-control" />
                <span asp-validation-for="ZooTransaction.GeneralTicketQuantity" class="text-danger"></span>
            </div>
            <div style="height: 20px;"></div>
            <div class="form-group">
                <label asp-for="ZooTransaction.GeneralTicketDate" class="control-label"></label>
                <input asp-for="ZooTransaction.GeneralTicketDate" class="form-control" />
                <span asp-validation-for="ZooTransaction.GeneralTicketDate" class="text-danger"></span>
            </div>
            <div style="height: 20px;"></div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        var itemIndex = 1;

        document.getElementById("addItem").addEventListener("click", function () {
            var container = document.getElementById("additional-items-container");

            // Create a div with class "row" to wrap the input fields
            var rowDiv = document.createElement("div");
            rowDiv.setAttribute("class", "row");

            rowDiv.style.marginTop = "20px";
            rowDiv.style.marginBottom = "20px";

            // Create a div with class "col-md-6" for the ItemId select element
            var colDivItemId = document.createElement("div");
            colDivItemId.setAttribute("class", "form-group col-md-6");

            // Create a div with class "col-md-6" for the ItemQuantity input element
            var colDivItemQuantity = document.createElement("div");
            colDivItemQuantity.setAttribute("class", "form-group col-md-6");

            // Create a new ItemId select element
            var newItemId = document.createElement("select");
            newItemId.setAttribute("class", "form-control item-id");
            newItemId.setAttribute("name", "ExpenseItems[" + itemIndex + "].ItemId");

            // Copy the options from the existing select element
            var existingItemId = document.querySelector(".item-id");
            for (var i = 0; i < existingItemId.options.length; i++) {
                newItemId.options.add(existingItemId.options[i].cloneNode(true));
            }

            // Create a new ItemQuantity input element
            var newItemQuantity = document.createElement("input");
            newItemQuantity.setAttribute("type", "number");
            newItemQuantity.setAttribute("class", "form-control item-quantity");
            newItemQuantity.setAttribute("name", "ExpenseItems[" + itemIndex + "].ItemQuantity");

            // Append the ItemId select element to the colDivItemId
            colDivItemId.appendChild(newItemId);

            // Append the ItemQuantity input element to the colDivItemQuantity
            colDivItemQuantity.appendChild(newItemQuantity);

            // Append the colDivItemId and colDivItemQuantity to the rowDiv
            rowDiv.appendChild(colDivItemId);
            rowDiv.appendChild(colDivItemQuantity);

            // Append the rowDiv to the container
            container.appendChild(rowDiv);

            itemIndex++;
        });
    </script>

}